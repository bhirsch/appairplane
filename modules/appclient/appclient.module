<?php

// Constants for permissions. Protects against typos.
define('APPCLIENT_ACCESS_CONFIG', 'applclient config');
define('APPCLIENT_ACCESS_INSTALL', 'appclient install');

// @TODO: move this to config.
define('APPSERVER_API', 'http://d/app'); // Deal with https if available.

function appclient_menu() {
  $items['admin/appclient'] = array(
    'title' => 'App Airplane',
    'page callback' => 'appclient_page',
    'access arguments' => array(APPCLIENT_ACCESS_CONFIG),
  );
  $items['admin/appclient/add'] = array(
    'title' => 'Install or Update an App',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('appclient_add'),
    'type' => MENU_LOCAL_TASK,
    'access arguments' => array(APPCLIENT_ACCESS_INSTALL),
  );
  //$items['admin/appclient/enable'] = array(
  //  'title' => 'Enable your App',
  //  'page callback' => 'drupal_get_form',
  //  'page arguments' => array('appclient_enable'),
  //  'access arguments' => array(APPCLIENT_ACCESS_INSTALL),
  //  'type' => MENU_CALLBACK,
  //);
  return $items;
}

function appclient_permission() {
  return array(
    APPCLIENT_ACCESS_CONFIG => array(
      'title' => t('Configure apps'),
    ),
    APPCLIENT_ACCESS_INSTALL => array(
      'title' => t('Install/Update apps'), // Maybe separate these? What about purchase?
    ),
  );
}

function appclient_page() {
  return 'coming soon';
}

function appclient_add($form, &$form_state) {
  if (!module_exists('update')) {
    // TODO: More descriptive
    drupal_set_message(t('Update module must be enabled. '), 'error');
    return;
  }
  if (!is_writable(conf_path())) {
    // TODO: tell people what to do.
    drupal_set_message('Your Sites directory is not writable by the web server. Please make it writable, or download and install your Apps manually.', 'error');
  }
  if (!is_writable('temporary://')) {
    // TODO: tell people what to do.
    drupal_set_message('Drupal\'s temporary directory is not writeable. Please fix this on the <a href="!href">On the File System page.</a>', array('!href' => url('admin/config/media/file-system')), 'error');
  }

  $form['code'] = array(
    '#title' => t('Purchase code'),
    '#type' => 'textfield',
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  return $form;
}

function appclient_add_submit($form, &$form_state) {
  $values = $form_state['values'];
  $data = array(
    // 'theme' => system_list('theme'),
    // 'module_enabled' => system_list('module_enabled'),
    'purchase_code' => '', //$values['purchase_code']
    // 'os' => PHP_OS,
  );
  $options = array(
    // 'headers' => array('Content-Type' => 'application/json'),
    'method' => 'POST',
    'data' => json_encode($data),
  );
  $return = drupal_http_request(APPSERVER_API . '/fulfill', $options); // deal with API version.

  // TODO: More error handling.
  if ($return->code == 200) {
    $appname = $return->headers['x-fulfill-name'];
    $tarball = 'temporary://appclient/' . "$appname.tar.gz";
    file_put_contents($tarball, $return->data);

    // Untar the app.
    module_load_include('inc', 'update', 'update.manager');
    $extract_directory = _update_manager_extract_directory();
    try {
      update_manager_archive_extract($tarball, $extract_directory);
    }
    catch (Exception $e) {
      drupal_set_message($e->getMessage(), 'error');
      return FALSE;
    }


    require $extract_directory . "/$appname.make";
    $primary = current($projects);

    $manifest = array(
      'project_mapper' => array('version' => '6.x-3.21'),
      'views' => '7.x-4.1',
      'context' => '',
    );
    $local = update_get_projects();
    foreach ($projects as $project_name => $project) {
      $manifest_version = key($project);
      if (isset($local[$project_name])) {
        $local_version = $local[$project_name]['info']['version'];
        if ($manifest_version > $local_version) {
          // Clean out older versions of projects.
          // TODO: Figure out where this fucker is in the modules dir
          // TODO: handle unwritable case.
          $target = drupal_realpath('./') . '/sites/all/modules/' . $project_name;
          if (file_exists($target)) {
            $removed = file_unmanaged_delete_recursive($target);
          }
          $renamed = rename(drupal_realpath($extract_directory), $target);
        }
        else {
          // Skip since local is newer. Write to log.
        }
      }
    }

    // Enable primary module (a no-op) if this is already enabled
    module_enable($primary);


    require_once DRUPAL_ROOT . '/includes/update.inc';
    if (update_get_update_list()) {
      drupal_set_message(t('Thanks for downloading a new app. Please update your database. After updating, please visit your Features Control Panel.'));
      // Copy from temp to sites/all/modules
      $form_state['redirect'] = 'update.php';
    }

    // Redirect to Features control panel.

  }
  else {
    drupal_set_message('Unable to download your App. ***** TODO ******.', 'error');
  }
}

// Show move command for putting it in sites/all/modules
// Offer an Enable button for enabling the app components
// Redirect to features control panel.
//function appclient_enable($form, &$form_state) {
//  $tmp = drupal_realpath('temporary://appclient.zip');
//  $dest = $_SERVER['DOCUMENT_ROOT'] . '/sites/all/modules/apps';
//  $title = t('Move code into your Drupal site');
//  if (is_windows()) {
//    $items[] = t('Delete !dest', array('!dest' => $dest . '/APPNAME'));
//    $items[] = t('Extract !archive to !dest.', array('!archive' => "$tmp/appclient.zip", '!dest' => $dest));
//    $form['move_cli'] = array(
//      '#title' => $title,
//      '#theme' => 'item_list',
//      '#items' => $items,
//    );
//  }
//  else {
//    $form['move_cli'] = array(
//      '#title' => $title,
//      '#type' => 'item',
//      '#markup' => "<pre>
//        rm -rf $dest/APPNAME
//        tar -zxvf -C $dest $tmp
//        </pre>",
//    );
//  }
//
//  $form['enable_title'] = array(
//    '#title' => 'Enable App',
//    '#type' => 'item',
//    // '#markup' => 'Enable App',
//  );
//  $form['enable'] = array(
//    // '#title' => 'Enable App',
//    '#type' => 'submit',
//    '#value' => t('Enable App (TODO - redirects to update.php)'),
//  );
//
//  return $form;
//}
//
//function is_windows() {
//  return substr(PHP_OS, 0, 3) == 'WIN';
//}